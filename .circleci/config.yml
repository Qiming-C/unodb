version: 2.1

jobs:
  build:
    parameters:
      build_type:
        type: enum
        enum: ["Debug", "Release"]
      compiler:
        type: enum
        enum: ["clang", "gcc"]
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    steps:
      - checkout
      - run:
          name: Checkout submodules
          command: git submodule update --init
      - run:
          name: Installing dependencies
          command: |
            readonly BUILD_TYPE=<< parameters.build_type >>
            readonly COMPILER=<< parameters.compiler >>
            sudo add-apt-repository -y 'ppa:mhier/libboost-latest'
            if [[ $COMPILER == "clang" ]]; then
              curl 'https://apt.llvm.org/llvm-snapshot.gpg.key' \
              | sudo apt-key add -
              echo \
                'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main' \
              | sudo tee -a /etc/apt/sources.list
            elif [[ $COMPILER == "gcc" ]]; then
              sudo add-apt-repository -y 'ppa:ubuntu-toolchain-r/test'
            fi
            sudo apt-get update
            sudo apt-get install -y boost1.74 valgrind
            if [[ $COMPILER == "clang" ]]; then
              sudo apt-get install -y clang-13 clang-tidy-13
              if [[ $BUILD_TYPE == "Release" ]]; then
                sudo apt-get install -y libomp5-13 llvm-13 lld-13
              fi
            elif [[ $COMPILER == "gcc" ]]; then
              sudo apt-get install -y g++-11
            fi
      - run:
          name: Create build environment
          command: mkdir build
      - run:
          name: Configure CMake
          working_directory: build
          command: |
            readonly BUILD_TYPE=<< parameters.build_type >>
            readonly COMPILER=<< parameters.compiler >>
            if [[ $COMPILER == "gcc" ]]; then
              export CC=gcc-11
              export CXX=g++-11
              EXTRA_CMAKE_ARGS=()
            elif [[ $COMPILER == "clang" ]]; then
              export CC=clang-13
              export CXX=clang++-13
              if [[ $BUILD_TYPE == "Release" ]]; then
                EXTRA_CMAKE_ARGS=(\
                  "-DLLVMAR_EXECUTABLE=/usr/bin/llvm-ar-13" \
                  "-DLLVMNM_EXECUTABLE=/usr/bin/llvm-nm-13" \
                  "-DLLVMRANLIB_EXECUTABLE=/usr/bin/llvm-ranlib-13")
              else
                EXTRA_CMAKE_ARGS=()
              fi
              EXTRA_CMAKE_ARGS=("${EXTRA_CMAKE_ARGS[@]}" \
                  "-DCLANG_TIDY_EXE=/usr/bin/clang-tidy-13")
            fi
            cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DFATAL_WARNINGS=ON \
              "${EXTRA_CMAKE_ARGS[@]}"
      - run:
          name: Build
          working_directory: build
          command: make -j3
      - run:
          name: Correctness test
          working_directory: build
          command: ctest -j3 -V
      - run:
          name: Benchmark correctness test
          working_directory: build
          command: make quick_benchmarks
      - run:
          name: Valgrind test
          working_directory: build
          command: make valgrind

workflows:
  build:
    jobs:
      - build:
          name: GCC 11 Debug
          build_type: Debug
          compiler: gcc
      - build:
          name: GCC 11 Release
          build_type: Release
          compiler: gcc
      - build:
          name: clang 13 Debug
          build_type: Debug
          compiler: clang
      - build:
          name: clang 13 Release
          build_type: Release
          compiler: clang
